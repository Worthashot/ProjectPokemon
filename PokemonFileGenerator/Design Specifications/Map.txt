Map()
- Does nothing. Placeholder.

--------------------------------------------------------------------------------------------------------------------------------------------------

Map(int xDim, int Ydim)
- Sets dimensions of the map to the dimensions given by re-sizing mapComp.

- Allocates a generic wall to every tile

--------------------------------------------------------------------------------------------------------------------------------------------------

Map(string xDimS, string yDimS)
- Desciphers dimesnions from string and applys this to the constructor Map(int xDim, int Ydim).

--------------------------------------------------------------------------------------------------------------------------------------------------

Map(int xDim, int yDim, int encounter)
- Placeholder. Will implement after encounter codes are implemented.

--------------------------------------------------------------------------------------------------------------------------------------------------

Map(deque<string> info)
- Constructs a Map using relevent info passed in.

- Info expected to be read from a file and validated before being passed into the constructor.

- First line of info should be 2 evenly spaced non-negative integers.
	Resizes mapComp based on this
	The only check, if both dims are 0 will clear and end.

- Second line should be one non-negative integer.


- Next c lines should be valid TileTypes.
	c determined by line 2.
	each line passed into setTile to allocate the TileType to the Map

- Next x lines should be y evenly spaced sub-strings.
	x determined by first sub-string of line 1.
	y determined by second sub-string of line 1.
	Will set the co-ordinates of mapComp based on the string of info at that place

- Should be no more lines.

- If info is an incorrect form will attempt to construct with what was given, may cause unexpected behavour.

--------------------------------------------------------------------------------------------------------------------------------------------------

void setTile(TileType tile)
- Registers a new TileType to the map

--------------------------------------------------------------------------------------------------------------------------------------------------

void setSpace(int xCord, int yCord, string setSpace)
- Checks that the given name has a coresponding stored TileType.

- If so, stores the name to the given co-ordinate in mapComp.

- If not, complains.

--------------------------------------------------------------------------------------------------------------------------------------------------

void setSpaces(int xCord, vector<string> spaces)
- Checks each name has a coresponding stored TileType.

- If so, stores the name to the given co-ordinate in mapComp.

- If not, complains.

--------------------------------------------------------------------------------------------------------------------------------------------------

void setEncounterCode(int encounter)
- Sets the encounterCode to encounter.
	Currently not in use.

--------------------------------------------------------------------------------------------------------------------------------------------------

int getEncounterCode()
- Returns the encounterCode.
--------------------------------------------------------------------------------------------------------------------------------------------------

void addTile(string tile)
- checks if tile is of correct form for TileType.
	If so, creates a new TileType with this paramater.
	If not, throws an error.

-If tile is already added, does nothing.

--------------------------------------------------------------------------------------------------------------------------------------------------

void addTile(TileType tile)
- Adds the given TileType to the list of TileTypes customTiles.
	If tile already exists, does nothing.

--------------------------------------------------------------------------------------------------------------------------------------------------

TileType getTile(int x, int y)
- Returns the TileType with the name of position x, y in mapComp.
	If there is no tile at this position, returns an empty TileType
	If position is larger than the stored dimension, return an empty TileType

--------------------------------------------------------------------------------------------------------------------------------------------------

vector<int> getDimention()
- Returns a 2 element vector, with element 0 being the x dimentsion and element 1 being the y.

--------------------------------------------------------------------------------------------------------------------------------------------------

vector<string> getTiles()
- Returns a vector of every TileTypes name.

--------------------------------------------------------------------------------------------------------------------------------------------------

bool empty()
- Returns true is mapComp is empty.

- Returns false otherwise.

--------------------------------------------------------------------------------------------------------------------------------------------------

void readTile(string par)
- Checks that the given par is the correct form for a TileType.

- If not, does nothing

- If so, passes this to a TileType and adds this to the list of tileTypes.

--------------------------------------------------------------------------------------------------------------------------------------------------

void clear()
- Loops through Map comp, clearing each inner vector before clearing the outer